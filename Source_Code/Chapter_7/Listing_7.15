from scipy.spatial import ConvexHull
import numpy as np
import pandas as pd

class ConvexHullOutlierDetector:
  def __init__(self, num_iterations):
    self.num_iterations = num_iterations

  def fit_predict(self, df):
    scores = [0] * len(df) 
    remaining_df = df.copy()
    remaining_df['Row Idx'] = remaining_df.index

    for iteration_idx in range(self.num_iterations): 
        hull = ConvexHull(remaining_df[[df.columns[0], df.columns[1]]]) 

        simplex_idxs = [y for x in hull.simplices for y in x]
        simplex_idxs = list(set(simplex_idxs))
        for idx in simplex_idxs:
            orig_row_idx = remaining_df.loc[idx, 'Row Idx']
            scores[orig_row_idx] = (self.num_iterations - iteration_idx) 
            remaining_df = remaining_df.drop(index=idx) 
        remaining_df = remaining_df.reset_index(drop=True)

    return scores

df = create_four_clusters_test_data()
df = pd.DataFrame(RobustScaler().fit_transform(df), columns=df.columns)
df[‘ConvexHull Scores’] = \ 
    ConvexHullOutlierDetector(num_iterations=2).fit_predict(df)
